Type ->
        | "int"
        | "bool"


Program ->
        | Block


Block -> 
        | \epsilon
        | Statement Block

Statement ->
        | Declaration ';'
        | Assignment ';'
        | Print ';'
        | '{' Block '}'
        | 'if' '(' CompExpr ')' Statement [ 'else' Statement ]
        | 'while' '(' CompExpr ')' Statement
        | 'for' '(' Declaration ';' Expression ';' Assignment ')' Statement


Declaration ->
        | Type Id '=' Expression

Assignment ->
        | Id '=' Expression
       
Print -> 
        | "print" '(' Expression ')'

Expression ->
        | CompExpr
        | Expression '==' CompExpr
        | Expression '!=' CompExpr


CompExpr ->
        | AddExpr
        | CompExpr '<' AddExpr
        | CompExpr '>' AddExpr
        | CompExpr '<=' AddExpr
        | CompExpr '>=' AddExpr

AddExpr ->
        | Term
        | AddExpr '+' Term
        | AddExpr '-' Term

Term ->
        | Factor
        | Term '*' Factor
        | Term '/' Factor
        | Term '%' Factor


Factor ->
        | number
        | Id
        | '(' Expression ')'
